// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecases/usecases.go
//
// Generated by this command:
//
//	mockgen -source=internal/usecases/usecases.go -destination=internal/usecases/mocks/usecases.go
//

// Package mock_usecases is a generated GoMock package.
package mock_usecases

import (
	reflect "reflect"

	usecases "github.com/Ropho/avito-bootcamp-assignment/internal/usecases"
	gomock "go.uber.org/mock/gomock"
)

// MockUsecase is a mock of Usecase interface.
type MockUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockUsecaseMockRecorder
}

// MockUsecaseMockRecorder is the mock recorder for MockUsecase.
type MockUsecaseMockRecorder struct {
	mock *MockUsecase
}

// NewMockUsecase creates a new mock instance.
func NewMockUsecase(ctrl *gomock.Controller) *MockUsecase {
	mock := &MockUsecase{ctrl: ctrl}
	mock.recorder = &MockUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecase) EXPECT() *MockUsecaseMockRecorder {
	return m.recorder
}

// HouseCreate mocks base method.
func (m *MockUsecase) HouseCreate(arg0 usecases.HouseCreateRequest) (usecases.HouseCreateResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HouseCreate", arg0)
	ret0, _ := ret[0].(usecases.HouseCreateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HouseCreate indicates an expected call of HouseCreate.
func (mr *MockUsecaseMockRecorder) HouseCreate(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HouseCreate", reflect.TypeOf((*MockUsecase)(nil).HouseCreate), arg0)
}
